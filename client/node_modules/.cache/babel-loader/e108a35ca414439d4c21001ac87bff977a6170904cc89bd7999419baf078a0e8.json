{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Desktop/NewBlog/client/src/context/auth_context/AuthState.js\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer } from \"react\";\nimport axios from 'axios';\nimport authReducer from \"./authReducer\";\nimport * as ActionTypes from '../ContextActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport default function AuthState(props) {\n  _s();\n  const initialState = {\n    //defines the initial state of authentication context including the following properties\n    token: localStorage.getItem('token'),\n    currentUser: null,\n    toasts: null,\n    isAuthenticated: null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      'x-auth-token': localStorage.getItem('token')\n    }\n  };\n\n  // #region----------------------[Actions]-------------------\n\n  const registerUser = async userData => {\n    try {\n      const res = await axios.post('/api/users/register', userData, config);\n      dispatch({\n        type: ActionTypes.REGISTER_SUCCESS,\n        //if request successful funcn dispatches this action\n        payload: res.data // with response data as payload\n      });\n    } catch (err) {\n      console.log(err.response.data);\n      dispatch({\n        type: ActionTypes.REGISTER_FAIL,\n        payload: err.response.data\n      });\n    }\n  };\n  const loginUser = async userData => {\n    try {\n      const res = await axios.post('/api/users/login', userData, config);\n      dispatch({\n        type: ActionTypes.LOGIN_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      console.log(err.response.data);\n      dispatch({\n        type: ActionTypes.LOGIN_FAIL,\n        payload: err.response.data\n      });\n    }\n  };\n  const logoutUser = async () => {\n    dispatch({\n      type: ActionTypes.LOGOUT\n    });\n  };\n  const clearErrors = async () => {\n    dispatch({\n      type: ActionTypes.CLEAR_ERRORS\n    });\n  };\n  const getProfile = async () => {\n    try {\n      const res = await axios.get('/api/users/profile', config); //we are sending the config because we are also sending the token to the header\n      dispatch({\n        type: ActionTypes.SET_CURRENT_USER,\n        payload: res.data\n      });\n    } catch (err) {\n      console.log(err.response.data);\n      dispatch({\n        type: ActionTypes.AUTH_ERROR,\n        payload: err.response.data\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      currentUser: state.currentUser,\n      toasts: state.toasts,\n      isAuthenticated: state.isAuthenticated,\n      registerUser,\n      loginUser,\n      logoutUser,\n      clearErrors,\n      getProfile\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n_s(AuthState, \"UrEkDPQH5U12xnblC9PjDJeyoVE=\");\n_c = AuthState;\nvar _c;\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"names":["createContext","useReducer","axios","authReducer","ActionTypes","jsxDEV","_jsxDEV","AuthContext","AuthState","props","_s","initialState","token","localStorage","getItem","currentUser","toasts","isAuthenticated","state","dispatch","config","headers","registerUser","userData","res","post","type","REGISTER_SUCCESS","payload","data","err","console","log","response","REGISTER_FAIL","loginUser","LOGIN_SUCCESS","LOGIN_FAIL","logoutUser","LOGOUT","clearErrors","CLEAR_ERRORS","getProfile","get","SET_CURRENT_USER","AUTH_ERROR","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/rahul/Desktop/NewBlog/client/src/context/auth_context/AuthState.js"],"sourcesContent":["import { createContext, useReducer } from \"react\";\nimport axios from 'axios';\nimport authReducer  from \"./authReducer\";\nimport * as ActionTypes from '../ContextActions';\n\nexport const AuthContext = createContext();\n\nexport default function AuthState(props){\n\n    const initialState = { //defines the initial state of authentication context including the following properties\n        token: localStorage.getItem('token'), \n        currentUser: null,\n        toasts: null,\n        isAuthenticated: null,\n    };\n\n    const [state,dispatch] = useReducer(authReducer,initialState);\n\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            'x-auth-token': localStorage.getItem('token'),\n        }\n    }\n\n    // #region----------------------[Actions]-------------------\n\n    const registerUser = async (userData) => {\n        try{\n            const res = await axios.post('/api/users/register', userData, config);\n            dispatch({\n                type: ActionTypes.REGISTER_SUCCESS, //if request successful funcn dispatches this action\n                payload: res.data // with response data as payload\n            })\n        }\n        catch(err){\n            console.log(err.response.data);\n            dispatch({\n                type: ActionTypes.REGISTER_FAIL,\n                payload: err.response.data,\n            })\n        }\n    }\n\n    const loginUser = async (userData) => {\n        try{\n            const res = await axios.post('/api/users/login', userData, config);\n            dispatch({\n                type: ActionTypes.LOGIN_SUCCESS,\n                payload: res.data\n            })\n        }\n        catch(err){\n            console.log(err.response.data);\n            dispatch({\n                type: ActionTypes.LOGIN_FAIL,\n                payload: err.response.data,\n            })\n        }\n    }\n\n    const logoutUser = async () =>{\n        dispatch({\n            type: ActionTypes.LOGOUT,\n        })\n    }\n\n    const clearErrors = async () =>{\n        dispatch({\n            type: ActionTypes.CLEAR_ERRORS,\n        })\n    }\n\n    const getProfile = async () =>{\n        try{\n            const res = await axios.get('/api/users/profile', config); //we are sending the config because we are also sending the token to the header\n            dispatch({\n                type: ActionTypes.SET_CURRENT_USER,\n                payload: res.data\n            })\n        }\n        catch(err){\n            console.log(err.response.data);\n            dispatch({\n                type: ActionTypes.AUTH_ERROR,\n                payload: err.response.data,\n            })\n        }\n    }\n\n\n    return(\n        <AuthContext.Provider value={{\n            token: state.token,\n            currentUser: state.currentUser,\n            toasts: state.toasts,\n            isAuthenticated: state.isAuthenticated,\n            registerUser,\n            loginUser,\n            logoutUser,\n            clearErrors,\n            getProfile\n        }}>\n            {props.children}\n        </AuthContext.Provider>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}