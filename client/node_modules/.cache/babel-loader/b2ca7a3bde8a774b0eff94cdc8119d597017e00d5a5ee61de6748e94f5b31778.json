{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Desktop/NewBlog/client/src/pages/BlogDetail.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport MainContainer from '../components/MainContainer';\nimport { useParams } from 'react-router-dom';\nimport { Container, Paper, Button, TextField, Stack, IconButton, Typography } from '@mui/material';\nimport { toast } from 'react-toastify';\n\n// ---------------------------Icons----------------------\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport EditIcon from '@mui/icons-material/Edit';\n//------------------ end region--------------------------\n\nimport { useBlog } from '../middleware/contextHooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BlogDetail() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    currentBlog,\n    getBlogById,\n    toasts,\n    clearToasts\n  } = useBlog();\n  const [edit, setEdit] = useState(false); //for creating a disabled state\n  const [temp, setTemp] = useState(null); //temporary blog ==> holds the unedited version \n  //so that while editing if we hit cancel button then we can go back to our original unedited version\n\n  const [blog, setBlog] = useState(null);\n  useEffect(() => {\n    if (!currentBlog || (currentBlog === null || currentBlog === void 0 ? void 0 : currentBlog._id) !== id) {\n      getBlogById(id);\n    }\n    if ((currentBlog === null || currentBlog === void 0 ? void 0 : currentBlog._id) === id) {\n      setBlog(currentBlog);\n    }\n\n    // if(toasts){\n    //     toasts.forEach(ele => {\n    //         toast(ele.message, {type: ele.type})\n    //     })\n    // }\n  }, [currentBlog, id, toasts, clearToasts, getBlogById]);\n  const handleDelete = () => {};\n  const handleEdit = () => {\n    setEdit(true);\n    setTemp(blog); //creating temp copy of our blog, so whatever state our blog is right now we're going to create a temp copy of it\n  };\n\n  const handleCancel = () => {\n    setEdit(false);\n    setBlog(temp); //resetting blog to temp\n  };\n\n  const handleUpdate = () => {};\n  const displayDisabled = () => {\n    return /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        direction: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          sx: {\n            flexGrow: 1\n          },\n          children: blog === null || blog === void 0 ? void 0 : blog.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleEdit,\n          children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleDelete,\n          children: /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"p\",\n        children: blog === null || blog === void 0 ? void 0 : blog.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      sx: {\n        mt: 3,\n        mb: 5\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          backgroundColor\n        },\n        children: !edit ? displayDisabled() //if we're not clicking on edit button we're going to display disable ELSE we'll display the following thing (means we'll then be able to edit after clicking the edit button)\n        : /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Title\",\n            name: \"title\",\n            value: blog === null || blog === void 0 ? void 0 : blog.title //if blog is not null the value is title\n            ,\n            onChange: e => setBlog({\n              ...blog,\n              title: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Content\",\n            name: \"content\",\n            value: blog === null || blog === void 0 ? void 0 : blog.content,\n            onChange: e => setBlog({\n              ...blog,\n              content: e.target.value\n            }),\n            multiline: true,\n            minRows: 5,\n            maxRows: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 2,\n            direction: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: handleUpdate,\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              onClick: handleCancel,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n_s(BlogDetail, \"axdlcDmMQMY05BW4Y6TJO7W5Qbg=\", false, function () {\n  return [useParams, useBlog];\n});\n_c = BlogDetail;\nvar _c;\n$RefreshReg$(_c, \"BlogDetail\");","map":{"version":3,"names":["useState","useEffect","MainContainer","useParams","Container","Paper","Button","TextField","Stack","IconButton","Typography","toast","DeleteForeverIcon","EditIcon","useBlog","jsxDEV","_jsxDEV","BlogDetail","_s","id","currentBlog","getBlogById","toasts","clearToasts","edit","setEdit","temp","setTemp","blog","setBlog","_id","handleDelete","handleEdit","handleCancel","handleUpdate","displayDisabled","spacing","children","direction","variant","sx","flexGrow","title","fileName","_jsxFileName","lineNumber","columnNumber","onClick","content","maxWidth","mt","mb","backgroundColor","label","name","value","onChange","e","target","multiline","minRows","maxRows","_c","$RefreshReg$"],"sources":["/home/rahul/Desktop/NewBlog/client/src/pages/BlogDetail.jsx"],"sourcesContent":["import {useState,useEffect} from 'react'\nimport MainContainer from '../components/MainContainer'\nimport { useParams } from 'react-router-dom'\nimport {\n    Container, Paper,Button, TextField, Stack, IconButton,Typography\n} from '@mui/material'\nimport {toast} from 'react-toastify'\n\n// ---------------------------Icons----------------------\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever'\nimport EditIcon from '@mui/icons-material/Edit'\n//------------------ end region--------------------------\n\nimport { useBlog } from '../middleware/contextHooks' \n\nexport default function BlogDetail(){\n    const {id} = useParams();\n    const {currentBlog, getBlogById, toasts, clearToasts} = useBlog();\n\n    const [edit,setEdit] = useState(false); //for creating a disabled state\n    const [temp, setTemp] = useState(null); //temporary blog ==> holds the unedited version \n                                            //so that while editing if we hit cancel button then we can go back to our original unedited version\n\n    const [blog,setBlog] = useState(null);\n\n    useEffect(() =>{\n        if(!currentBlog || currentBlog?._id!==id){\n            getBlogById(id);\n        }\n\n        if(currentBlog?._id === id){\n            setBlog(currentBlog);\n        }\n        \n\n        // if(toasts){\n        //     toasts.forEach(ele => {\n        //         toast(ele.message, {type: ele.type})\n        //     })\n        // }\n        \n    }, [currentBlog, id, toasts, clearToasts, getBlogById])\n\n    const handleDelete = () => {}\n\n    const handleEdit = () => {\n        setEdit(true);\n        setTemp(blog); //creating temp copy of our blog, so whatever state our blog is right now we're going to create a temp copy of it\n    }\n\n    const handleCancel = () => {\n        setEdit(false);\n        setBlog(temp); //resetting blog to temp\n    }\n\n    const handleUpdate = () =>{\n\n    }\n\n\n    const displayDisabled = () => {\n        return(\n            <Stack spacing={2}>\n                <Stack spacing={2} direction='row'>\n                    <Typography variant='h5' sx={{flexGrow: 1}}>{blog?.title}</Typography>\n                    <IconButton onClick={handleEdit}>\n                        <EditIcon/>\n                    </IconButton>\n                    <IconButton onClick={handleDelete}>\n                        <DeleteForeverIcon/>\n                    </IconButton>\n                </Stack>\n                <Typography variant='p'>{blog?.content}</Typography>\n            </Stack>\n        )\n    }\n\n    return(\n        <MainContainer>\n            <Container maxWidth='md' sx={{mt:3,mb:5}}>\n                <Paper sx={{backgroundColor}}>\n                    {   !edit \n                            ? displayDisabled() //if we're not clicking on edit button we're going to display disable ELSE we'll display the following thing (means we'll then be able to edit after clicking the edit button)\n                            : <Stack spacing={2}>  \n                                <TextField \n                                    label='Title' name='title'\n                                    value={blog?.title} //if blog is not null the value is title\n                                    onChange={(e) => setBlog({...blog, title: e.target.value})}\n                                />\n                                <TextField \n                                    label='Content' name='content'\n                                    value={blog?.content}\n                                    onChange={(e) => setBlog({...blog, content: e.target.value})}\n                                    multiline minRows={5} maxRows={20}\n                                />\n                                <Stack spacing={2} direction='row'>\n                                    <Button variant='contained' onClick={handleUpdate}>Update</Button> \n                                    <Button variant='outlined' onClick={handleCancel}>Cancel</Button> \n                                </Stack>\n                            </Stack>\n                    }\n                </Paper>\n            </Container>\n        </MainContainer>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}