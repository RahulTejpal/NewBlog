{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Desktop/NewBlog/client/src/pages/BlogList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Paper, Typography, Button, Container, Stack, Tooltip, Box, List, ListItem, ListItemText } from '@mui/material';\nimport Masonry from '@mui/lab/Masonry';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { useBlog } from '../middleware/contextHooks';\nimport MainContainer from '../components/MainContainer';\nimport { toast } from 'react-toastify';\nimport BlogCard from '../components/BlogCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BlogList() {\n  _s();\n  const {\n    getBlogs,\n    toasts,\n    clearErrors,\n    blogs,\n    clearCurrentBlog\n  } = useBlog();\n  const navigate = useNavigate();\n  const [myBlogs, setMyBlogs] = useState([]);\n  useEffect(() => {\n    if (!blogs) {\n      getBlogs();\n    } else {\n      setMyBlogs(blogs);\n    }\n    if (toasts) {\n      toasts.forEach(ele => {\n        toast(ele.message, {\n          type: ele.type\n        });\n      });\n      clearErrors();\n    }\n  }, [toasts, clearErrors, blogs, getBlogs]);\n  const onCreateNewBlog = () => {};\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      sx: {\n        py: 1,\n        my: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: false,\n          md: 3,\n          children: [/*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 2,\n            sx: {\n              display: 'flex'\n            },\n            direction: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                flexGrow: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              fullWidth: false,\n              onClick: () => navigate('/newblog'),\n              children: \"Create Blog\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            sx: {\n              backgroundColor: 'silver',\n              borderRadius: 5,\n              mt: 3\n            },\n            children: myBlogs === null || myBlogs === void 0 ? void 0 : myBlogs.map(blog => /*#__PURE__*/_jsxDEV(Link, {\n              to: `/blogs/${blog._id}`,\n              children: /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: blog.title,\n                  placement: \"right\",\n                  children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: blog.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 41\n              }, this)\n            }, blog._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 9,\n          children: /*#__PURE__*/_jsxDEV(Masonry, {\n            columns: 2,\n            children: myBlogs === null || myBlogs === void 0 ? void 0 : myBlogs.map(blog => /*#__PURE__*/_jsxDEV(BlogCard, {\n              blog: blog\n            }, blog._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(BlogList, \"wZyjp7nN58BafBurF0mbR96EWnI=\", false, function () {\n  return [useBlog, useNavigate];\n});\n_c = BlogList;\nvar _c;\n$RefreshReg$(_c, \"BlogList\");","map":{"version":3,"names":["React","useState","useEffect","Grid","Paper","Typography","Button","Container","Stack","Tooltip","Box","List","ListItem","ListItemText","Masonry","useNavigate","Link","useBlog","MainContainer","toast","BlogCard","jsxDEV","_jsxDEV","BlogList","_s","getBlogs","toasts","clearErrors","blogs","clearCurrentBlog","navigate","myBlogs","setMyBlogs","forEach","ele","message","type","onCreateNewBlog","children","maxWidth","sx","py","my","container","spacing","item","xs","md","display","direction","flexGrow","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","onClick","backgroundColor","borderRadius","mt","map","blog","to","_id","title","placement","primary","columns","_c","$RefreshReg$"],"sources":["/home/rahul/Desktop/NewBlog/client/src/pages/BlogList.jsx"],"sourcesContent":["import React,{useState,useEffect} from 'react'\n\nimport {\n    Grid, Paper,Typography, Button, Container, Stack, Tooltip,Box, List,ListItem, ListItemText\n} from '@mui/material'\n\nimport Masonry from '@mui/lab/Masonry'\n\nimport { useNavigate, Link } from 'react-router-dom'\n\nimport { useBlog } from '../middleware/contextHooks'\nimport MainContainer from '../components/MainContainer'\nimport { toast } from 'react-toastify';\n\nimport BlogCard from '../components/BlogCard'\n\nexport default function BlogList(){\n    const {getBlogs,toasts,clearErrors,blogs,clearCurrentBlog} = useBlog();\n    const navigate = useNavigate();\n    const [myBlogs,setMyBlogs] = useState([]);\n\n    useEffect(()=> {\n        if(!blogs){\n            getBlogs()\n        }else{\n            setMyBlogs(blogs)\n        }\n\n        if(toasts){\n            toasts.forEach(ele => {\n                toast(ele.message, {type: ele.type})\n            });\n            clearErrors()\n        }\n    },[toasts, clearErrors,blogs, getBlogs])\n\n    const onCreateNewBlog = () => {\n        \n    }\n\n    return(\n        <MainContainer>\n           <Container maxWidth=\"lg\" sx={{py: 1,my:1}}>\n                <Grid container spacing={2}>\n                    <Grid item xs = {false} md={3}>\n                        \n                            <Stack spacing={2} sx={{display: 'flex'}} direction='row'>\n                                <Box sx={{flexGrow: 1}} />\n                                <Button fullWidth={false} onClick={()=> navigate('/newblog')}>Create Blog</Button>\n                            </Stack>\n\n                            <List sx={{backgroundColor: 'silver', borderRadius: 5, mt: 3}}>\n                                {myBlogs?.map(blog=> (\n                                    <Link to={`/blogs/${blog._id}`} key={blog._id}>\n                                        <ListItem>\n                                            <Tooltip title={blog.title} placement='right'>\n                                                <ListItemText primary={blog.title} />\n                                            </Tooltip>\n                                        </ListItem>\n                                    </Link>\n                                ))}\n                            </List>\n                        \n                    </Grid>\n\n                    <Grid item xs={12} md={9}>\n                            <Masonry columns={2}>\n                                    {myBlogs?.map(blog=> (\n                                        <BlogCard blog={blog} key={blog._id} />\n                                    ))}\n                            </Masonry>\n                    </Grid>\n                </Grid>\n           </Container>\n        </MainContainer>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}