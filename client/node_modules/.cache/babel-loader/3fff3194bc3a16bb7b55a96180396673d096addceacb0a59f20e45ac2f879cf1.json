{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Desktop/NewBlog/client/src/pages/NewBlog.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useBlog } from '../middleware/contextHooks';\nimport { Transition } from 'react-transition-group';\nimport { LoremIpsum } from 'lorem-ipsum';\nimport { toast } from 'react-toastify';\nimport gsap from 'gsap'; //used for animation\nimport { Grid, Slider, TextField, Container, Button, Paper, Stack, Typography, FormControlLabel, Checkbox } from '@mui/material';\n\n//-----------------------------Components--------------------------\nimport MainContainer from '../components/MainContainer';\n//---------------------end region----------------------------------\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewBlog() {\n  _s();\n  const navigate = useNavigate();\n  const [newBlog, setNewBlog] = useState({\n    title: '',\n    content: ''\n  });\n  const {\n    toasts,\n    clearErrors,\n    createBlog,\n    blogs,\n    getBlogs\n  } = useBlog();\n  const [onGenerate, setOnGenerate] = useState(false); //default value of checkbox\n\n  useEffect(() => {\n    if (!blogs) {\n      getBlogs();\n    }\n    if (toasts) {\n      toasts.forEach(ele => {\n        toast(ele.message, {\n          type: ele.type\n        });\n      });\n      clearErrors();\n    }\n  }, [toasts, clearErrors, blogs, getBlogs]);\n  const handleSave = () => {\n    if (newBlog.title.length > 0 && newBlog.content.length > 0) {\n      createBlog(newBlog);\n    } else {\n      toast('Please provide a blog title and content', {\n        type: 'error'\n      });\n    }\n  };\n  const [loremOptions, setLoremOptions] = useState({\n    minWordPerSentence: 3,\n    maxWordPerSentence: 16,\n    wordPerSentence: 4,\n    minSentencePerParagraph: 4,\n    maxSentencePerParagraph: 20,\n    sentencePerParagraph: 5,\n    minParaphPerBlog: 2,\n    maxParaphPerBlog: 10,\n    paragraphPerBlog: 3\n  });\n  const handleGenerate = () => {\n    const lorem = new LoremIpsum({\n      sentencesPerParagraph: {\n        max: loremOptions\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      sx: {\n        py: 2,\n        my: 1,\n        backgroundColor: 'silver'\n      },\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            align: \"left\",\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: onGenerate,\n              onChange: () => setOnGenerate(!onGenerate)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this),\n            label: \"Auto Generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          container: true,\n          spacing: 2,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            lg: 4,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Words Per Sentence\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Slider, {\n              min: 3,\n              max: 10,\n              value: 5\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Title\",\n            value: newBlog.title,\n            onChange: e => setNewBlog({\n              ...newBlog,\n              title: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            multiline: true,\n            minRows: 8,\n            maxRows: 20,\n            label: \"Content\",\n            value: newBlog.content,\n            onChange: e => setNewBlog({\n              ...newBlog,\n              content: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 2,\n            direction: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleSave,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              onClick: e => setNewBlog({\n                title: '',\n                content: ''\n              }),\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => navigate('/blogs'),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n_s(NewBlog, \"Pf8BeI4m0M8bcKUuAe9CxgYxqoI=\", false, function () {\n  return [useNavigate, useBlog];\n});\n_c = NewBlog;\nvar _c;\n$RefreshReg$(_c, \"NewBlog\");","map":{"version":3,"names":["useState","useEffect","useNavigate","useBlog","Transition","LoremIpsum","toast","gsap","Grid","Slider","TextField","Container","Button","Paper","Stack","Typography","FormControlLabel","Checkbox","MainContainer","jsxDEV","_jsxDEV","NewBlog","_s","navigate","newBlog","setNewBlog","title","content","toasts","clearErrors","createBlog","blogs","getBlogs","onGenerate","setOnGenerate","forEach","ele","message","type","handleSave","length","loremOptions","setLoremOptions","minWordPerSentence","maxWordPerSentence","wordPerSentence","minSentencePerParagraph","maxSentencePerParagraph","sentencePerParagraph","minParaphPerBlog","maxParaphPerBlog","paragraphPerBlog","handleGenerate","lorem","sentencesPerParagraph","max","children","maxWidth","sx","py","my","backgroundColor","component","container","spacing","item","align","control","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","label","xs","lg","min","value","e","target","multiline","minRows","maxRows","direction","onClick","variant","_c","$RefreshReg$"],"sources":["/home/rahul/Desktop/NewBlog/client/src/pages/NewBlog.jsx"],"sourcesContent":["import {useState,useEffect} from 'react';\nimport {useNavigate} from 'react-router-dom';\nimport {useBlog} from '../middleware/contextHooks';\nimport {Transition} from 'react-transition-group';\nimport {LoremIpsum} from 'lorem-ipsum'\nimport {toast} from 'react-toastify';\nimport gsap from 'gsap' //used for animation\nimport {\n    Grid, Slider, TextField, Container,\n    Button, Paper, Stack, Typography,\n    FormControlLabel, Checkbox\n} from '@mui/material'\n\n//-----------------------------Components--------------------------\nimport MainContainer from '../components/MainContainer';\n//---------------------end region----------------------------------\n\n\n\nexport default function NewBlog(){\n    const navigate = useNavigate()\n\n    const [newBlog, setNewBlog] = useState({title:'',content: ''});\n    const {toasts,clearErrors,createBlog,blogs,getBlogs} = useBlog();\n    const [onGenerate, setOnGenerate] = useState(false);//default value of checkbox\n\n\n    useEffect(() => {\n        if(!blogs){\n            getBlogs();\n        }\n        if(toasts){\n            toasts.forEach(ele => {\n                toast(ele.message, {type: ele.type})\n            })\n            clearErrors()\n        }\n    },[toasts,clearErrors,blogs,getBlogs]);\n\n    const handleSave = () => {\n        if(newBlog.title.length>0 && newBlog.content.length>0){\n            createBlog(newBlog);\n        } else{\n            toast('Please provide a blog title and content', {type: 'error'})\n        }\n    }\n\n    const [loremOptions, setLoremOptions] = useState({\n        minWordPerSentence: 3,\n        maxWordPerSentence: 16,\n        wordPerSentence: 4,\n\n        minSentencePerParagraph: 4,\n        maxSentencePerParagraph: 20,\n        sentencePerParagraph: 5,\n\n        minParaphPerBlog: 2,\n        maxParaphPerBlog: 10,\n        paragraphPerBlog: 3,\n    })\n\n    const handleGenerate = () => {\n        const lorem = new LoremIpsum({\n            sentencesPerParagraph: {\n                max: loremOptions\n            }\n        })\n    }\n\n    return(\n        <MainContainer>\n            <Container maxWidth=\"md\" sx={{py: 2, my: 1, backgroundColor: 'silver'}} component={Paper}>\n                <Grid container spacing={2}>\n\n\n                    <Grid item>\n                        <FormControlLabel align='left' \n                        control={\n                                <Checkbox\n                                    checked={onGenerate}\n                                    onChange={() => setOnGenerate(!onGenerate)}\n                                />\n                        } \n                        label='Auto Generate' />\n                    </Grid>\n\n                    <Grid item xs={12} container spacing={2}>\n                        <Grid item xs={12} lg={4}>\n                            <Typography>Words Per Sentence</Typography>\n                            <Slider\n                                min={3} max={10} value={5}\n                            />\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <TextField\n                            label=\"Title\" value={newBlog.title}\n                            onChange={(e) => setNewBlog({...newBlog, title: e.target.value})}\n                           /> \n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <TextField\n                            multiline minRows={8} maxRows={20}\n                            label=\"Content\" value={newBlog.content}\n                            onChange={(e) => setNewBlog({...newBlog, content: e.target.value})}\n                           /> \n                    </Grid>\n\n                    <Grid item >\n                        <Stack spacing={2} direction=\"row\">\n                            <Button onClick={handleSave}>Save</Button>\n                            <Button variant='outlined' onClick={e => setNewBlog({title: '', content: ''})}>Clear</Button>\n                            <Button onClick={() => navigate('/blogs')}>Cancel</Button>\n                        </Stack>\n                    </Grid>\n\n                </Grid>\n            </Container>\n        </MainContainer>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}